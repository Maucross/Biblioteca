// <auto-generated />
using Biblioteca.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;

namespace jojo.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20181102234422_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("Biblioteca.Models.bibliotecario", b =>
                {
                    b.Property<int>("id_bib")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("contraseña")
                        .IsRequired();

                    b.Property<string>("usuario")
                        .IsRequired();

                    b.HasKey("id_bib");

                    b.ToTable("bibliotecario");
                });

            modelBuilder.Entity("Biblioteca.Models.estudiante", b =>
                {
                    b.Property<int>("cod_est")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ape");

                    b.Property<string>("contraseña")
                        .IsRequired();

                    b.Property<string>("escuela");

                    b.Property<string>("nomb");

                    b.Property<string>("usuario")
                        .IsRequired();

                    b.HasKey("cod_est");

                    b.ToTable("estudiante");
                });

            modelBuilder.Entity("Biblioteca.Models.libros", b =>
                {
                    b.Property<int>("cod_lib")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CD");

                    b.Property<string>("ISBN")
                        .IsRequired();

                    b.Property<double>("alto");

                    b.Property<double>("ancho");

                    b.Property<string>("autor")
                        .IsRequired();

                    b.Property<int>("año_pub");

                    b.Property<int>("cantidad_hoj");

                    b.Property<int>("cantidad_lib");

                    b.Property<string>("categoria")
                        .IsRequired();

                    b.Property<string>("editorial")
                        .IsRequired();

                    b.Property<string>("estado_libro");

                    b.Property<string>("idioma")
                        .IsRequired();

                    b.Property<byte?>("portada");

                    b.Property<string>("sipnosis")
                        .IsRequired();

                    b.Property<string>("titulo")
                        .IsRequired();

                    b.HasKey("cod_lib");

                    b.ToTable("libros");
                });

            modelBuilder.Entity("Biblioteca.Models.prestamo", b =>
                {
                    b.Property<int>("cod_prest")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("cod_lib");

                    b.Property<int?>("datosEstudiantecod_est");

                    b.Property<DateTime>("fecha_reserva");

                    b.Property<string>("modalidad")
                        .IsRequired();

                    b.HasKey("cod_prest");

                    b.HasIndex("cod_lib");

                    b.HasIndex("datosEstudiantecod_est");

                    b.ToTable("prestamo");
                });

            modelBuilder.Entity("Biblioteca.Models.reserva", b =>
                {
                    b.Property<int>("cod_res")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("cod_prest");

                    b.Property<string>("estado_reserva");

                    b.Property<DateTime>("fecha_realizacion");

                    b.HasKey("cod_res");

                    b.HasIndex("cod_prest");

                    b.ToTable("reserva");
                });

            modelBuilder.Entity("Biblioteca.Models.prestamo", b =>
                {
                    b.HasOne("Biblioteca.Models.libros", "datosLibro")
                        .WithMany()
                        .HasForeignKey("cod_lib")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Biblioteca.Models.estudiante", "datosEstudiante")
                        .WithMany()
                        .HasForeignKey("datosEstudiantecod_est");
                });

            modelBuilder.Entity("Biblioteca.Models.reserva", b =>
                {
                    b.HasOne("Biblioteca.Models.prestamo", "datosprestamo")
                        .WithMany()
                        .HasForeignKey("cod_prest")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
